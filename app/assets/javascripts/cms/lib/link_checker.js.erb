this.Link_Checker = (function () {
  function ResultBox() {
    this.$el = null;
    this.$elBody = null;
  }

  ResultBox.prototype.init = function() {
    if (this.$el) {
      return this;
    }

    var $div = $("#errorLinkChecker");
    if ($div[0]) {
      this.$el = $div;
      this.$elBody = $div.find(".errorExplanationBody");

      return this.moveLast();
    }

    $div = $("<div/>", { id: 'errorLinkChecker', class: 'errorExplanation' });
    $div.append("<h2>" + Link_Checker.message["header"] + "</h2>");

    var $body = $("<div/>", { class: 'errorExplanationBody' });
    $div.append($body);

    this.$el = $div;
    this.$elBody = $body;

    return this.moveLast();
  };

  ResultBox.prototype.moveLast = function() {
    $(Cms_Form.addonSelector).append(this.$el);
    return this;
  };

  ResultBox.prototype.showMessage = function(message) {
    this.init();
    this.$elBody.html(message);
    this.moveLast();

    return this;
  }

  ResultBox.prototype.showChecking = function() {
    return this.showMessage(SS.loading);
  };

  ResultBox.prototype.showResult = function () {
    if (Link_Checker.error !== "") {
      return this.showMessage(Link_Checker.error);
    }

    var $ul = $("<ul/>");
    for (var link in Link_Checker.links) {
      var msg = Link_Checker.links[link];
      $ul.append('<li>' + msg + '</li>');
    }

    this.$elBody.html("");
    this.$elBody.append("<p>" + Link_Checker.message["checkLinks"] + "</p>");
    this.$elBody.append($ul);

    return this.moveLast();
  };

  function Link_Checker() {
  }

  Link_Checker.message = {
    header: "<%= I18n.t('cms.link_check') %>",
    noLinks: "<%= I18n.t('errors.template.no_links') %>",
    checkLinks: "<%= I18n.t('errors.template.check_links') %>",
    success: "<%= I18n.t('errors.messages.link_check_success') %>",
    failure: "<%= I18n.t('errors.messages.link_check_failure') %>",
    linkCheckerError: "<%= I18n.t('errors.messages.link_check_failed_to_connect') %>"
  };

  Link_Checker.links = {};

  Link_Checker.error = "";

  Link_Checker.url = "/.cms/link_check/check.json";

  Link_Checker.rootUrl = "";

  Link_Checker.resultBox = new ResultBox();

  Link_Checker.render = function () {
    return $(document).on("click", "button.link-check", function () {
      $.support.cors = true;

      var button = this;
      button.disabled = true;

      Link_Checker.resultBox.showChecking();

      var rejected = function(xhr, status, error) {
        Link_Checker.resultBox.showMessage("<p>" + Link_Checker.message["linkCheckerError"] + ": " + Cms_Form.form_html_path + "</p>");
        button.disabled = false;
      };

      if (Cms_Form.addonSelector === ".mod-cms-body") {
        var html = Cms_Form.getEditorHtml();

        Link_Checker.reset();
        Link_Checker.check(html, function () {
          Link_Checker.resultBox.showResult();
          button.disabled = false;
        });
        return;
      }

      if (! Cms_Form.form_link_check_path) {
        rejected(null, null, "form link check path is not configured");
        return;
      }

      var formData = Cms_Form.getFormData($("#" + Form_Preview.form_id));
      formData.append("route", Form_Preview.page_route);

      $.ajax({
        type: "POST",
        url: Cms_Form.form_link_check_path,
        data: formData,
        processData: false,
        contentType: false,
        cache: false,
        success: function(data) {
          Link_Checker.reset();

          $.each(data, function() {
            var link = this[0];
            var status = this[1];

            var msg = '<span class="' + status + '">' + Link_Checker.message[status] + '</span>';
            Link_Checker.addMessage(link, null, msg);
          })

          Link_Checker.resultBox.showResult();
          button.disabled = false;
        },
        error: function(xhr, status, error) {
          rejected(xhr, status, error);
        }
      });
    });
  };

  Link_Checker.reset = function () {
    this.links = {};
    this.error = "";
  };

  Link_Checker.addMessage = function (link, state, msg) {
    if (! msg) {
      if (state) {
        msg = '<span class="success">' + Link_Checker.message["success"] + '</span>';
      } else {
        msg = '<span class="failure">' + Link_Checker.message["failure"] + '</span>';
      }
    }
    return Link_Checker.links[link] = link + " " + msg;
  };

  Link_Checker.check = function (html, complete) {
    var href, j, len, link, links, numOfLinks, ref;
    numOfLinks = $(html).find('a[href]').length;
    if (numOfLinks === 0) {
      Link_Checker.error = "<p>" + Link_Checker.message["noLinks"] + "</p>";
      complete();
      return;
    }
    links = [];
    ref = $(html).find('a[href]');
    for (j = 0, len = ref.length; j < len; j++) {
      href = ref[j];
      link = $(href).attr('href');
      if (link === "#") {
        continue;
      }
      if (link[0] === "#") {
        Link_Checker.addMessage(link, $(html).find(link).length !== 0);
      } else {
        if (/^\//.test(link)) {
          link = Link_Checker.rootUrl + link.slice(1);
        }
        links.push(link);
      }
    }
    $.ajax({
      type: "POST",
      url: Link_Checker.url,
      cache: false,
      data: JSON.stringify({
        "url": links
      }),
      contentType: 'application/json',
      dataType: "json",
      crossDomain: true,
      success: function (res, status) {
        var code;
        for (link in res) {
          code = res[link];
          Link_Checker.addMessage(link, code === 200);
        }
      },
      error: function (xhr, status, error) {
        Link_Checker.error = "<p>" + Link_Checker.message["linkCheckerError"] + ": " + Link_Checker.url + "</p>";
      },
      complete: function (xhr, status) {
        complete();
      }
    });
  };

  return Link_Checker;

})();

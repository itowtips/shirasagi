class @Geolocation_Map
  @map        = null
  @form       = null
  @center     = [36.204824, 138.252924]
  @zoom       = 5
  @markers    = null
  @openedInfo = null
  @resized    = null
  @autoResize  = true

  @attachMessage: (id) ->
    google.maps.event.addListener Geolocation_Map.markers[id]["marker"], 'click', (event) ->
      if(Geolocation_Map.openedInfo)
        Geolocation_Map.openedInfo.close()
      if Geolocation_Map.markers[id]["window"]
        Geolocation_Map.markers[id]["window"].open(Geolocation_Map.markers[id]["marker"].getMap(), Geolocation_Map.markers[id]["marker"])
      Geolocation_Map.openedInfo = Geolocation_Map.markers[id]["window"]
    google.maps.event.addListener Geolocation_Map.markers[id]["window"], 'closeclick', (event) ->
      Geolocation_Map.openedInfo = null

  @setForm: (form) ->
    @form = form

  @load: (selector, opts = {}) ->
    mapTypeId = opts["mapTypeId"]
    unless mapTypeId == "GSI" || mapTypeId == google.maps.MapTypeId.ROADMAP
      mapTypeId = google.maps.MapTypeId.ROADMAP

    mapOptions = {
      center: new google.maps.LatLng(@center[0], @center[1]),
      zoom: @zoom
      mapTypeId: mapTypeId
      streetViewControl: false
      #mapTypeControl: true
      mapTypeControlOptions:{
        mapTypeIds:[ google.maps.MapTypeId.ROADMAP, "GSI" ]
        position: google.maps.ControlPosition.LEFT_TOP
        style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
      }
    }

    @map = new google.maps.Map($(selector).get(0), mapOptions)
    #@map.mapTypes.set("OSM", new google.maps.ImageMapType({
    #  getTileUrl: (coord, zoom) ->
    #    tilesPerGlobe = 1 << zoom
    #    x = coord.x % tilesPerGlobe
    #    if (x < 0)
    #      x = tilesPerGlobe + x
    #    return "http://tile.openstreetmap.jp/" + zoom + "/" + x + "/" + coord.y + ".png"
    #  isPng: true
    #  tileSize: new google.maps.Size(256, 256),
    #  name: "オープンストリートマップ",
    #  maxZoom: 18
    #}))
    @map.mapTypes.set("GSI", {
      name: "国土地理院地図",
      tileSize: new google.maps.Size(256, 256),
      isPng: true
      maxZoom: 18,
      getTile: (tileCoord, zoom, ownerDocument) ->
        img = ownerDocument.createElement("img")
        img.style.width = "256px"
        img.style.height = "256px"
        x = (tileCoord.x % Math.pow(2, zoom)).toString()
        y = tileCoord.y.toString()
        img.src = "http://cyberjapandata.gsi.go.jp/xyz/pale/" + zoom + "/" + x + "/" + y + ".png"
        return img
    })

    google.maps.event.addListenerOnce(@map,'idle', () ->
      this.mapTypes.roadmap.name = 'グーグルマップ'
      this.setOptions(mapTypeControl: true)
    )
    window.map = @map
    return

  @resize: ->
    google.maps.event.trigger(@map, "resize")
    if !@resized
      @map.setCenter new google.maps.LatLng(@center[0], @center[1])
      @form.renderMarkers() if @form
    @resized = true

  @renderMarkers: ->
    @form.renderMarkers() if @form

  @renderEvents: ->
    @form.renderEvents() if @form

  @setMarkers: (markers) ->
    Geolocation_Map.markers = markers
    markerBounds = new google.maps.LatLngBounds()

    $.each Geolocation_Map.markers, (id, value) ->
      if value["image"]
        Geolocation_Map.markers[id]["marker"] = new google.maps.Marker(
          position: new google.maps.LatLng(value["loc"]['lat'], value["loc"]['lng']),
          icon: value["image"],
          map: Geolocation_Map.map
        )
      else
        Geolocation_Map.markers[id]["marker"] = new google.maps.Marker(
          position: new google.maps.LatLng(value["loc"]['lat'], value["loc"]['lng']),
          map: Geolocation_Map.map
        )

      markerBounds.extend(new google.maps.LatLng(value["loc"]['lat'], value["loc"]['lng']))

      if value["html"]
        marker_html = value["html"]
        Geolocation_Map.markers[id]["window"] = new google.maps.InfoWindow(
          content: marker_html
        )
        Geolocation_Map.attachMessage(id)
      else if value["name"] || value["text"]
        name = value["name"]
        text = value["text"]
        marker_html = '<div class="marker-info">'
        if name && name != ""
          marker_html += '<p>' + name + '</p>'
        if text && text != ""
          $.each text.split(/[\r\n]+/), ->
            if this.match(/^https?:\/\//)
              marker_html += '<p><a href="' + this + '">' + this + '</a></p>'
            else
              marker_html += '<p>' + this + '</p>'

        marker_html += '</div>'
        Geolocation_Map.markers[id]["window"] = new google.maps.InfoWindow(
          content: marker_html
        )
        Geolocation_Map.attachMessage(id)
      else
        #
      return

    #if @autoResize && !$.isEmptyObject(Geolocation_Map.markers)
    #  zoomChangeBoundsListener = google.maps.event.addListener Geolocation_Map.map, 'bounds_changed', (event) ->
    #    if this.getZoom() > 13 && this.initialZoom == true
    #      this.setZoom(13)
    #      this.initialZoom = false
    #    google.maps.event.removeListener(zoomChangeBoundsListener)
    #
    #  Geolocation_Map.map.initialZoom = true
    #  Geolocation_Map.map.fitBounds(markerBounds)
    return

class @Facility_Geolocation
  @markerIcon    = '/assets/img/map-marker.png'
  @clickIcon     = "//maps.google.com/mapfiles/ms/icons/blue-dot.png"
  @clickMarker   = null

  @setMapLoc: (ele, lat, lon) ->
    lat = Math.ceil(lat * Math.pow(10,6)) / Math.pow(10,6)
    lon = Math.ceil(lon * Math.pow(10,6)) / Math.pow(10,6)
    ele.val(lon.toFixed(6) + "," + lat.toFixed(6))
    return

  @setCircle :(map, loc, radius) ->
    lat = loc[1]
    lon = loc[0]
    outer_radius = radius * 1000
    outer_circle = new google.maps.Circle(
      center: new google.maps.LatLng(lat, lon)
      fillColor: '#ff6432'
      fillOpacity: 0.16
      map: map
      radius: outer_radius
      strokeColor: '#ff6432'
      strokeOpacity: 1
      strokeWeight: 1
      clickable: false
    )
    for inner_radius in [1000, 3000, 5000, 10000, 30000, 50000]
      if (outer_radius - inner_radius) <= 0
        break
      inner_circle = new google.maps.Circle(
        center: new google.maps.LatLng(lat, lon)
        fillColor: '#ff6432'
        fillOpacity: 0.0
        map: map
        radius: inner_radius,
        strokeColor: '#ff6432'
        strokeOpacity: 1
        strokeWeight: 1
        clickable: false
      )
    marker = new google.maps.Marker(
      position: new google.maps.LatLng(lat, lon)
      zIndex: 9999
      icon: Facility_Geolocation.markerIcon
      map: map
    )

    map.fitBounds(outer_circle.getBounds())
    map.addListener 'zoom_changed', ->
      zoom = map.getZoom()
      if zoom >= 14
        fillOpacity = 0.0
      else if zoom <= 6
        fillOpacity = 0.16
      else
        fillOpacity = (14 - zoom) * 0.02
      outer_circle.setOptions({fillOpacity: fillOpacity})

  @render :(selector, opts = {})->
    markers = opts["markers"]
    loc = opts["loc"]
    radius = opts["radius"]
    mapTypeId = opts["defaultLayer"]

    Geolocation_Map.autoResize = false
    Geolocation_Map.load("#map-canvas", mapTypeId: mapTypeId)
    Geolocation_Map.setMarkers(markers)

    if loc && radius
      lat = loc[1]
      lon = loc[0]
      Facility_Geolocation.setCircle(Geolocation_Map.map, loc, radius)
    else
      lat = Geolocation_Map.center[0]
      lon = Geolocation_Map.center[1]

    Geolocation_Map.map.setCenter new google.maps.LatLng(lat, lon)
    Geolocation_Map.map.setZoom(15)

    # setup geolocation search
    $(".geolocation").on "click", () ->
      success = (position) ->
        loc = [position.coords.latitude, position.coords.longitude]
        r = $(".radius").val()
        layer = Geolocation_Map.map.getMapTypeId()
        $(".geolocation").text("位置情報取得に成功")
        #console.log(position.coords.latitude + "," + position.coords.longitude)

        form = $("<form>")
        form.append($("<input/>", name: "lat", value: loc[0], type: "hidden" ))
        form.append($("<input/>", name: "lon", value: loc[1], type: "hidden" ))
        form.append($("<input/>", name: "r", value: r, type: "hidden" ))
        form.append($("<input/>", name: "layer", value: layer, type: "hidden" ))
        form.appendTo("body")
        form.submit()

      error = (error) ->
        errorMessage = {
          0: "位置情報の取得に失敗しました。" ,
          1: "位置情報の取得が許可されませんでした。" ,
          2: "位置情報の取得に失敗しました。" ,
          3: "位置情報の取得に失敗しました。" ,
        }
        alert(errorMessage[error.code] + " ERROR(" + error.code + ")" + error.message)
        $(".geolocation").text("現在地から検索")
        $(".geolocation").removeAttr("disabled")

      option = {
        "enableHighAccuracy": true,
        "maximumAge": 30000,
        #"timeout": 8000,
      }

      if( navigator.geolocation )
        $(".geolocation").text("現在地を取得しています...")
        $(".geolocation").attr("disabled", "disabled")
        navigator.geolocation.getCurrentPosition(success, error, option)
      else
        alert("お使いの端末では、現在位置を取得できませんでした。")

    # setup geolocation click
    google.maps.event.addListener Geolocation_Map.map, 'click', (event) ->
      Facility_Geolocation.setMapLoc($(".map-clicked"), event.latLng.lat(), event.latLng.lng())
      if Facility_Geolocation.clickMarker != null
        Facility_Geolocation.clickMarker.setMap(null)

      Facility_Geolocation.clickMarker = new google.maps.Marker(
        position: new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()),
        icon: Facility_Geolocation.clickIcon,
        map: Geolocation_Map.map,
      )

    # setup geolocation search
    $(".map-search").on "click", () ->
      loc = $(".current-loc").val()

      if $(".map-clicked").val()
        loc = $(".map-clicked").val()
      if !loc
        return false

      loc = loc.split(",")
      r = $(".radius").val()
      layer = Geolocation_Map.map.getMapTypeId()

      form = $("<form>")
      form.append($("<input/>", name: "lon", value: loc[0], type: "hidden" ))
      form.append($("<input/>", name: "lat", value: loc[1], type: "hidden" ))
      form.append($("<input/>", name: "r", value: r, type: "hidden" ))
      form.append($("<input/>", name: "layer", value: layer, type: "hidden" ))
      form.appendTo("body")
      form.submit()
      return fals

    # setup geolocation facility-location
    $(".facility-location").on "change", ->
      if !$(this).val()
        return false

      loc = $(this).val().split(",")
      loc = [parseFloat(loc[0]), parseFloat(loc[1])]
      r = $(".radius").val()
      layer = Geolocation_Map.map.getMapTypeId()

      form = $("<form>")
      form.append($("<input/>", name: "lon", value: loc[0], type: "hidden" ))
      form.append($("<input/>", name: "lat", value: loc[1], type: "hidden" ))
      form.append($("<input/>", name: "r", value: r, type: "hidden" ))
      form.append($("<input/>", name: "layer", value: layer, type: "hidden" ))
      form.appendTo("body")
      form.submit()
      return false

    # setup categorybar filter
    if $("#map-categorybar").length
      $("#map-categorybar .filter").on "click", ->
        dataIds = []
        $("#map-categorybar .filter:checked").each ->
          dataIds.push parseInt($(this).attr("data-id"))

        $.each Geolocation_Map.markers, (id, value) ->
          visible = false
          $.each dataIds, ->
            if $.inArray(parseInt(this), Geolocation_Map.markers[id]["category"]) >= 0
              visible = true
              return false

          if visible
            Geolocation_Map.markers[id]["marker"].setVisible(true)
          else
            Geolocation_Map.markers[id]["marker"].setVisible(false)
            Geolocation_Map.markers[id]["window"].close()

      $("#map-categorybar .filter-all").on "click", ->
        visible = $(this).prop('checked')
        $("#map-categorybar .filter").prop("checked", visible)

        $.each Geolocation_Map.markers, (id, value) ->
          if visible
            Geolocation_Map.markers[id]["marker"].setVisible(true)
          else
            Geolocation_Map.markers[id]["marker"].setVisible(false)
            Geolocation_Map.markers[id]["window"].close()

<%= form_for :item, url: { action: :update }, html: { id: "item-form", method: :put, multipart: true, autocomplete: :off } do |f| %>
  <%= error_messages_for :item %>

  <%= hidden_field_tag :_updated, params[:_updated] || @item.updated if @item.respond_to?(:updated) %>

  <div class="addon-views">
    <%=
      {}.then do |addon_options|
        addon_options[:id] = "ldap-connection"
        addon_options[:head] = t("riken.ldap.connection_setting")
        buf = render "form_connection", f: f, addon: addon_options
        render "ss/crud/addon", addon: addon_options do
          buf
        end
      end
    %>

    <%=
      {}.then do |addon_options|
        addon_options[:id] = "ldap-group-condition"
        addon_options[:head] = t("riken.ldap.group_condition")
        buf = render "form_group_condition", f: f, addon: addon_options
        render "ss/crud/addon", addon: addon_options do
          buf
        end
      end
    %>

    <%=
      {}.then do |addon_options|
        addon_options[:id] = "ldap-user-condition"
        addon_options[:head] = t("riken.ldap.user_condition")
        buf = render "form_user_condition", f: f, addon: addon_options
        render "ss/crud/addon", addon: addon_options do
          buf
        end
      end
    %>

    <%=
      {}.then do |addon_options|
        addon_options[:id] = "ldap-roles"
        addon_options[:head] = t("riken.ldap.roles")
        buf = render "form_roles", f: f, addon: addon_options
        render "ss/crud/addon", addon: addon_options do
          buf
        end
      end
    %>

    <%=
      {}.then do |addon_options|
        addon_options[:id] = "ldap-custom-groups"
        addon_options[:head] = t("riken.ldap.custom_groups")
        buf = render "form_custom_groups", f: f, addon: addon_options
        render "ss/crud/addon", addon: addon_options do
          buf
        end
      end
    %>
  </div>

  <footer class="send">
    <% if @crud_buttons %>
      <% @crud_buttons.call f %>
    <% else %>
      <%= f.submit t("ss.buttons.save"), class: 'btn-primary save', data: { disable_with: t("ss.buttons.saving") } %>
      <%= f.button t("ss.buttons.cancel"), class: 'btn-default', type: :reset, onclick: "location.href='#{url_for(action: :show)}'; return false;" %>
    <% end %>
  </footer>

<% end %>

<%= jquery do %>
  SS.confirmUnloading();
  Riken_LdapTest.render();
<% end %>

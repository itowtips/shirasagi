<%
  addon ||= local_assigns.fetch(:addon, {})
  addon[:display_body] = "hide"
%>

<% render_menu_setting = proc do |type, fallback_label| %>
  <dl class="see addon-gws-system-menu-setting">
    <dt><%= @model.t("menu_#{type}_state") %><%= @model.tt("menu_#{type}_state") %></dt>
    <dd>
      <%= f.select "menu_#{type}_state", @item.send("menu_#{type}_state_options") %>
      <% if I18n.available_locales.length == 1 %>
        <%= f.text_field("menu_#{type}_label", placeholder: tryb { fallback_label[I18n.default_locale] } || t("modules.gws/#{type}"), class: "menu-label") %>
      <% else %>
        <% translations = @item.send("menu_#{type}_label_translations") %>
        <% I18n.default_locale.tap do |lang| %>
          <%= text_field_tag "#{f.object_name}[menu_#{type}_label_translations][#{lang}]", tryb { translations[lang].presence }, placeholder: tryb { fallback_label[lang] } || t("modules.gws/#{type}", locale: lang), class: "menu-label" %>
        <% end %>
        <% I18n.available_locales.reject { |lang| lang == I18n.default_locale }.each do |lang| %>
          <%= text_field_tag "#{f.object_name}[menu_#{type}_label_translations][#{lang}]", tryb { translations[lang].presence }, placeholder: tryb { fallback_label[lang] } || t("modules.gws/#{type}", locale: lang), class: "menu-label" %>
        <% end %>
      <% end %>
    </dd>
  </dl>
<% end %>

<% render_menu_setting.call(:portal, I18n.available_locales.index_with { |lang| t('modules.gws/portal', locale: lang) }) %>
<% render_menu_setting.call(:notice) %>
<% render_menu_setting.call(:schedule) %>
<% render_menu_setting.call(:todo, I18n.available_locales.index_with { |lang| t('mongoid.models.gws/schedule/todo', locale: lang) }) %>
<% render_menu_setting.call(:reminder, I18n.available_locales.index_with { |lang| t('mongoid.models.gws/reminder', locale: lang) }) %>
<% render_menu_setting.call(:presence, I18n.available_locales.index_with { |lang| t('mongoid.models.gws/presence', locale: lang) }) %>
<% render_menu_setting.call(:attendance) %>
<% render_menu_setting.call(:bookmark) %>
<% render_menu_setting.call(:memo) %>
<% render_menu_setting.call(:report) %>
<% render_menu_setting.call(:workflow) %>
<% render_menu_setting.call(:circular) %>
<% render_menu_setting.call(:monitor) %>
<% render_menu_setting.call(:survey) %>
<% render_menu_setting.call(:board) %>
<% render_menu_setting.call(:faq) %>
<% render_menu_setting.call(:qna) %>
<% render_menu_setting.call(:discussion) %>
<% render_menu_setting.call(:share) %>
<% render_menu_setting.call(:shared_address) %>
<% render_menu_setting.call(:personal_address) %>
<% render_menu_setting.call(:staff_record, I18n.available_locales.index_with { |lang| t('gws/staff_record.staff_records', locale: lang) }) %>
<% render_menu_setting.call(:links, I18n.available_locales.index_with { |lang| t('mongoid.models.gws/link', locale: lang) }) %>
<% render_menu_setting.call(:contrast, I18n.available_locales.index_with { |lang| t('mongoid.models.gws/contrast', locale: lang) }) %>
<% render_menu_setting.call(:elasticsearch) %>

<%
  map_loc = @item.map_loc.present? ? @item.map_loc : [ 35.392915, 139.442888 ]
  map_zoom = @item.map_zoom.present? ? @item.map_zoom : 5
%>
<%= javascript_include_tag "http://maps.googleapis.com/maps/api/js?v=3&sensor=false&callback=initmap" %>
<%= coffee do %>

setMapLoc = (ele, lat, lon) ->
  lat = Math.ceil(lat * Math.pow(10,6)) / Math.pow(10,6);
  lon = Math.ceil(lon * Math.pow(10,6)) / Math.pow(10,6);
  ele.val(lat.toFixed(6) + "," + lon.toFixed(6));

getMapLoc = (ele) ->
  latlon = ele.val().split(',')
  return new google.maps.LatLng(parseFloat(latlon[0]), parseFloat(latlon[1]))

geocoderSearch = ->
  geocoder = new google.maps.Geocoder()
  geocoder.geocode(
    { "address" : $(".mod-map .query").val(), "region" : "jp" },
    (results, status) ->
      if(status==google.maps.GeocoderStatus.OK)
        window.map.setCenter(results[0].geometry.location)
      else
        alert(Map_Form.searchFailedMessage)
      return
  )
  return false

window.initmap = ->
  #googleMap api v3
  mapOptions = {
    center: new google.maps.LatLng(<%= raw map_loc[0] %>, <%= raw map_loc[1] %>),
    zoom: <%= raw map_zoom %>,
    mapTypeId: google.maps.MapTypeId.ROADMAP,
    panControl: false,
    zoomControl: true,
    zoomControlOptions: {
      style: google.maps.ZoomControlStyle.LARGE
    },
    mapTypeControl: true,
    scaleControl: true,
    scrollwheel: true,
    streetViewControl: true,
    overviewMapControl: true,
    overviewMapControlOptions: {
        opened: true
    }
  };

  window.map = new google.maps.Map($("#map-canvas")[0],  mapOptions)
  window.clickIcon = "http://maps.google.com/mapfiles/ms/icons/blue-dot.png"
  window.clickMarker = null

  google.maps.event.addListener map, 'click', ( event ) ->
    setMapLoc($(".mod-map .clicked"), event.latLng.lat(), event.latLng.lng())
    if window.clickMarker != null
      window.clickMarker.setMap(null)

    window.clickMarker = new google.maps.Marker(
      position: new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()),
      icon: clickIcon,
      map: map,
    );

  google.maps.event.addListener map, 'dragend', (event) ->
    center = map.getCenter();
    setMapLoc $(".mod-map .map-loc"), center.lat(), center.lng()

  google.maps.event.addListener map, 'zoom_changed', ->
    level = map.getZoom();
    $(".mod-map .map-zoom").val(level)

  # map
  $(".mod-map .set-center").on 'click', ->
    $("input[name='item[map_loc]']").val $(".mod-map .map-loc").val()
    $("input[name='item[map_zoom]']").val $(".mod-map .map-zoom").val()
    return false

  $(".mod-map .reset-center").on 'click', ->
    $(".mod-map .map-loc").val $("input[name='item[map_loc]']").val()
    $(".mod-map .map-zoom").val $("input[name='item[map_zoom]']").val()
    window.map.setCenter(getMapLoc($("input[name='item[map_loc]']")))
    window.map.setZoom(parseInt($("input[name='item[map_zoom]']").val()))
    return false

  $(".mod-map .search").on 'click', ->
    geocoderSearch()
    return false

  $(".mod-map .query").on 'submit', (e) ->
    alert("this")
    geocoderSearch()
    e.preventDefault();
    return false

  # markers
  $(".mod-map .add-marker").on 'click', ->
    Map_Form.clonePointForm()
    return false

  $(".mod-map .clear-marker").on 'click', ->
    Map_Form.clearPointForm($(this).closest("dd.marker"))
    return false

  $(".mod-map .set-marker").on 'click', ->
    Map_Form.setMarker($(this).closest("dd.marker"))
    return false

  window.markers = []
  $(".mod-map dd.marker").each ->
    $(this).attr("data-id", Map_Form.dataID)
    loc = getMapLoc($(this).find(".marker-loc"))
    window.markers[Map_Form.dataID] = new google.maps.Marker(
      position: loc,
      map: window.map
    )
    Map_Form.dataID += 1

  return;

class @Map_Form
  @maxPointForm = 10
  @deleteMessage = "マーカーを削除してよろしいですか？"
  @searchFailedMessage = "座標を取得できませんでした。"
  @dataID = 0

  @clonePointForm: ()->
    if $(".mod-map dd.marker").length < Map_Form.maxPointForm
      cln = $(".mod-map dd.marker:last").clone(false).insertAfter($(".mod-map dd.marker:last"))
      cln.attr("data-id",Map_Form.dataID)
      Map_Form.dataID += 1
      cln.find("input,textarea").val ""
      cln.find(".marker-name").val("<%= @item.t :marker_name %>")
      cln.find(".clear-marker").on 'click', ->
        Map_Form.clearPointForm(cln)

      cln.find(".set-marker").on 'click', ->
        Map_Form.setMarker(cln)

  @clearPointForm: (ele)->
    if $(".mod-map dd.marker").length > 1
      if ele.find(".marker-loc").val() != ""
        if confirm(Map_Form.deleteMessage)
          if window.markers[parseInt(ele.attr("data-id"))]
            window.markers[parseInt(ele.attr("data-id"))].setMap(null)
          ele.find("input,textarea").val ""
          ele.remove()
      else
        if window.markers[parseInt(ele.attr("data-id"))]
          window.markers[parseInt(ele.attr("data-id"))].setMap(null)
        ele.remove()
    else
      if ele.find(".marker-loc").val() != ""
        if confirm(Map_Form.deleteMessage)
          if window.markers[parseInt(ele.attr("data-id"))]
            window.markers[parseInt(ele.attr("data-id"))].setMap(null)
          ele.find("input,textarea").val ""

  @setMarker: (ele)->
    if $(".mod-map .clicked").val() != ""
      ele.find(".marker-loc").val $(".mod-map .clicked").val()

      if window.markers[parseInt(ele.attr("data-id"))]
        window.markers[parseInt(ele.attr("data-id"))].setMap(null)
      window.markers[parseInt(ele.attr("data-id"))] = new google.maps.Marker(
        position: getMapLoc(ele.find(".marker-loc")),
        map: map
      )

<% end %>

<div class="mod-map">
  <div id="map-container">
    <div id="map-canvas"></div>
    <dl class="map-setting">
      <dt><%= t("map.setting") %><%= @item.tt :map_setting %></dt>
      <dd>
        <p>
          <%= t("map.search") %>
          <%= text_field_tag :query, nil, class: "query" %>
          <%= button_tag t("map.button.search"), { type: :button, class: "search" } %>
        </p>
        <p>
          <%= t("map.loc") %>
          <%= f.text_field :map_loc, class: "loc", value: map_loc.join(",") %>
          <%= t("map.zoom") %>
          <%= f.text_field :map_zoom, class: "zoom", value: map_zoom %>
          <%= button_tag t("map.button.set_loc"), { type: :button, class: "set-center" } %>
          <%= button_tag t("map.button.set_center"), { type: :button, class: "reset-center" } %>
          <%= hidden_field_tag :map_loc, map_loc.join(","), class: "map-loc" %>
          <%= hidden_field_tag :map_zoom, map_zoom, class: "map-zoom" %>
        </p>
      </dd>
    </dl>
  </div>
  <div id="map-markers">
    <dl class="marker-setting">
      <dt>
        <%= t("map.markers") %><%= @item.tt :map_setting %>
        <%= hidden_field_tag :clicked, nil, class: "loc clicked" %>
      </dt>
      <% if @item.map_points.blank? %>
        <dd class="marker">
          <p>
            <%= button_tag t("map.button.set_marker"), { type: :button, class: "set-marker" } %>
            <%= hidden_field_tag "item[map_points][][loc]", nil, class: "loc marker-loc" %>
            <%= text_field_tag "item[map_points][][name]", @item.t(:marker_name), class: "marker-name" %>
            <%= button_tag t("map.button.clear_marker"), { type: :button, class: "clear-marker" } %>
          </p>
          <p>
            <span class="text"><%= @item.t :marker_text %></span>
            <%= text_area_tag "item[map_points][][text]", nil, class: "marker-text" %>
          </p>
        </dd>
      <% end %>
      <% @item.map_points.each do |point| %>
        <dd class="marker">
          <p>
            <%= button_tag t("map.button.set_marker"), { type: :button, class: "set-marker" } %>
            <%= text_field_tag "item[map_points][][name]", point[:name], class: "marker-name" %>
            <%= hidden_field_tag "item[map_points][][loc]", point[:loc].join(","), class: "loc marker-loc" %>
            <%= button_tag t("map.button.clear_marker"), { type: :button, class: "clear-marker" } %>
          </p>
          <p>
            <span class="text"><%= @item.t :marker_text %></span>
            <%= text_area_tag "item[map_points][][text]", point[:text], class: "marker-text" %>
          </p>
        </dd>
      <% end %>
      <dd><%= button_tag t("map.button.add_marker"), { type: :button, class: "add-marker" } %></dd>
    </dl>
  </div>
</div>

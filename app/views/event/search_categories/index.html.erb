<%= coffee do %>

selectCategories =(categories) ->
  $(".search-categories input:checkbox").each ->
    $.colorbox.element().closest("dl").find("table.selected-categories tr[data-id=#{$(this).val()}]").remove();

  for category in categories
    tr = $("<tr>").attr("data-id", category["id"])
    input = $("<td>").append($.colorbox.element().closest("dl").find("input:hidden.hidden-categories-ids:first").clone(false))
    input.find("input").val(category["id"])
    input.append(category["name"])
    deselect = $("<td>").append('<%= link_to t("cms.search_categories.deselect"), "#", class: :deselect %>')
    deselect.find("a.deselect").click(deselectCategory)
    tr.append(input)
    tr.append(deselect)
    $.colorbox.element().closest("dl").find("table.selected-categories tbody").append(tr)
    $.colorbox.element().closest("dl").find("table.selected-categories").show()
  return

deselectCategory =() ->
  $(this).parents("tr:first").remove()
  if $.colorbox.element().closest("dl").find("table.selected-categories tr[data-id]").size() == 0
    $.colorbox.element().closest("dl").find("table.selected-categories").hide()
  return false

searchCategories =(elem) ->
  elem = $(elem)
  elem.on "submit", (e) ->
    elem.find("input").attr "disabled", true
    url = "<%= request.url %>"
    query = elem.find("input.query").val().trim()
    $.ajax {
      type: "GET", url: url, cache: false,
      data: { q: { name: query } },
      success: (data) ->
        $("div.search-categories").children().remove()
        $("div.search-categories").append data

        selected = []
        $.colorbox.element().closest("dl").find("table.selected-categories tbody tr").each ->
          selected.push $(this).attr("data-id")
        for id in selected
          $(".search-categories input:checkbox[value=#{id}]").prop("checked", true);

        return
      complete: (xhr, status) ->
        elem.find("input").removeAttr "disabled"
        SS_ListUI.render($(".search-categories table"))

        $(".search-categories tbody a[href]").click ->
          name = $(this).text()
          id = $(this).parents("tr:first").attr("data-id")
          selectCategories([{id : id, name : name}])
          $.colorbox.close()
          return false

        #$(".search-categories").change(toggleSelectButton)
    }
    return false
  return

toggleSelectButton =()->
  if $(".search-categories input:checkbox").filter(":checked").size() > 0
    $("button.select-categories").parent("div:first").show()
  else
    $("button.select-categories").parent("div:first").hide()

$ ->
  searchCategories "form.search-categories"
  $("button.select-categories").click ->
    categories = []
    $(".search-categories input:checkbox").filter(":checked").each ->
      name = $(this).parent().text();
      id = $(this).val();
      categories.push { id: id,  name: name }
    selectCategories(categories)
    $.colorbox.close()
    return false
  $("form.search-categories").trigger('submit');
  #toggleSelectButton()

<% end %>

<div style="margin-bottom: 20px; padding: 10px; border: 1px solid #ddd;">
<%= form_for :item, url: { action: :index }, html: { method: "GET", class: "search-categories", multipart: true } do |f| %>
  <%= text_field_tag :query, nil, { id: nil, class: "query" } %>
  <%= f.submit t("cms.search_categories.search"), class: :search %>
<% end %>
</div>

<div class="search-categories">
</div>

<div style="margin-bottom: 20px; padding: 10px; border: 1px solid #ddd;">
  <%= button_tag t("cms.search_categories.select"), { type: :button, class: "select-categories" } %>
</div>

